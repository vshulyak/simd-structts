[tox]
envlist = lint,py36,py37,py38,py39,pypi-description,coverage-report
isolated_build = True


[testenv]
# Prevent random setuptools/pip breakages like
# https://github.com/pypa/setuptools/issues/1042 from breaking our builds.
setenv =
    VIRTUALENV_NO_DOWNLOAD=1
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest tests/

[testenv:py36]
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
basepython = python3.6
install_command = pip install --no-compile {opts} {packages}
deps = .[tests]
setenv =
    PYTHONWARNINGS=d
whitelist_externals = coverage
commands = coverage run --parallel -m pytest {posargs}


[testenv:py37]
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
basepython = python3.7
install_command = pip install --no-compile {opts} {packages}
deps = .[tests]
setenv =
    PYTHONWARNINGS=d
commands = coverage run --parallel -m pytest {posargs}


[testenv:py38]
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
basepython = python3.8
install_command = pip install --no-compile {opts} {packages}
deps = .[tests]
setenv =
    PYTHONWARNINGS=d
commands = coverage run --parallel -m pytest {posargs}

[testenv:py39]
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
basepython = python3.9
install_command = pip install --no-compile {opts} {packages}
deps = .[tests]
setenv =
    PYTHONWARNINGS=d
commands = coverage run --parallel -m pytest {posargs}


[testenv:coverage-report]
passenv = CI TRAVIS TRAVIS_* CODECOV_TOKEN
basepython = python3.8
skip_install = true
deps =
    coverage
    codecov
commands =
    coverage combine
    coverage report
    codecov


[testenv:lint]
basepython = python3.8
skip_install = true
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files


[testenv:pypi-description]
basepython = python3.8
skip_install = true
deps =
    twine
    pip >= 18.0.0
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*
